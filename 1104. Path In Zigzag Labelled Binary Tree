class Solution {
    public List<Integer> pathInZigZagTree(int label) {
        List<Integer> ans = new ArrayList<>();
        if(label==1){ans.add(1); return ans;}
        int i =2;
        int c = 1;
        while(i<=label){
            i*=2;
            c++;
        }
        //one level before this label
        int end = i/2-1;
        int start= i/4;
        
        ans.add(label);  
        label/=2;
        //find next
        int next = start+Math.abs(label-end);
        ans.add(next);
        
        int temp =1;
        while(label > 1&&next>1){
            label/=2;
            next/=2;            
            if(temp%2==0)ans.add(next);
            else ans.add(label);
            temp++;
        }

        Collections.reverse(ans);
        return ans;
    }
}

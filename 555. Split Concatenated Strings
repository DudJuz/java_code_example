class Solution {
    public String splitLoopedString(String[] strs) {
        int len = strs.length;
        if(len<1) return "";
        
        //transform to max lexi order
        for(int i =0; i<strs.length; i++){
            String rev = new StringBuilder(strs[i]).reverse().toString();
            if(strs[i].compareTo(rev)<0) strs[i] = rev;
        }
        
        String ans = "";
        char max = 'a';
        //try each str be the cut string, denote i 
        for(int i =0; i<strs.length; i++){
            String rev = new StringBuilder(strs[i]).reverse().toString();
            
            //try normal and reverse order for the target str i
            for(String s : new String[]{strs[i],rev}){
                
                //pick the index of the cut position in this str, denote j
                for(int j = 0 ; j < strs[i].length(); j++){
                    
                    // always expend the biggest start
                    if(s.charAt(j)<max)continue;
                    else max = s.charAt(j);
                    
                    StringBuilder trys = new StringBuilder(s.substring(j));
                    for(int k = i+1; k < strs.length;k++){
                        trys.append(strs[k]);
                    }
                    for(int k = 0; k<i; k ++){
                        trys.append(strs[k]);
                    }
                    trys.append(s.substring(0,j));
                    if(trys.toString().compareTo(ans)>0) ans = trys.toString();
                }
                
            }

        }
        return ans;
    }
}

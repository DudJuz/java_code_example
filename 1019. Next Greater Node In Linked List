/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public int[] nextLargerNodes(ListNode head) {
        List<Integer> list = new ArrayList<>();
        while(head!=null){list.add(head.val);head = head.next;}
        Stack<Integer> stack = new Stack<>();
        int[] ans = new int[list.size()];
        for(int i = 0 ; i < list.size(); i++){
            // when current node is bigger than previous
            while(!stack.isEmpty()&&list.get(i)>list.get(stack.peek())) {
                ans[stack.pop()] = list.get(i);
            }
            // if current node is smaller then previous 
            stack.push(i);
        }       
        return ans;
    }
}
